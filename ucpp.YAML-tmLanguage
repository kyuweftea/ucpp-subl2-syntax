# [PackageDev] target_format: plist, ext: tmLanguage
---
name: uC++
scopeName: source.ucpp
fileTypes: [ucpp, uh]
uuid: 6d5872a5-0367-4387-af71-8f4102f198f0

patterns:
- include: "#u_special_block"
- include: source.c++

- comment: ucppConditionals
  match: \b(_When|and|or)\b
  name: keyword.control.conditional.ucpp

- comment: ucppPrimitiveStatement
  match: \b(_Abort|_Accept|_Select|_Timeout)\b
  name: keyword.control.statement.ucpp

- comment: ucppConcurrentStructure
  match: \b(_Coroutine|_Monitor|_PeriodicTask|_RealTimeTask|_SporadicTask|_Task|_Event)\b
  name: storage.type.concurrent.ucpp

- comment: ucppException
  match: \b(_At|_CatchResume|_Disable|_Enable|_Resume|_Throw)\b
  name: keyword.control.exception.ucpp

- comment: ucppMutexModifier
  match: \b(_Mutex|_Nomutex)\b
  name: storage.modifier.mutex.ucpp

- comment: ucppPreProc
  match: \b(__U_CPLUSPLUS_MINOR__|__U_CPLUSPLUS_PATCH__|__U_CPLUSPLUS__|__U_DEBUG__|__U_MULTI__|__U_VERIFY__|__U_YIELD__)\b
  name: meta.preprocessor.ucpp

repository:
  u_special_block:

    patterns:
    - begin: \b(class|struct|_Coroutine|_Monitor|_PeriodicTask|_RealTimeTask|_SporadicTask|_Task)\s+([_A-Za-z][_A-Za-z0-9]*\b)
      beginCaptures:
        '1': {name: storage.type.ucpp}
        '2': {name: entity.name.type.ucpp}
      end: (?<=\})|(?=(;|,|\(|\)|>|\[|\]))
      name: meta.class-struct-block.ucpp

      patterns:
      - include: "#angle-brackets"

      - begin: (\{)
        beginCaptures:
          '1': {name: punctuation.definition.scope.ucpp}
        end: (\})(\s*\n)?
        endCaptures:
          '1': {name: punctuation.definition.invalid.ucpp}
          '2': {name: invalid.illegal.you-forgot-semicolon.ucpp}

        patterns:
        - include: "#u_special_block"
        - include: "#special_block"
        - include: "#constructor"
        - include: $base
        
      - include: $base
